<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<!-- *******************  Tokens and Token-based Annotations *********************** -->

<queries>
    <query id="1">
        <string>[]</string>
        <description>find all single tokens of every type</description>
        <corpus></corpus>
    </query>
    <query id="2">
        <string>&lt;word/&gt;</string> <!-- alternative: [(!pause=".*" &amp; !vocal=".*" &amp; !incident=".*")]-->
        <description>find all single word tokens</description>
        <corpus></corpus>
    </query>
    <query id="3">
        <string>&lt;pause/&gt;</string>
        <description>find all pauses</description>
        <corpus></corpus>
    </query>
    <query id="4">
        <string>&lt;vocal/&gt;</string>
        <description>find all vocalized but non-lexical phenomena such as breathing</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="5">
        <string>&lt;incident/&gt;</string>
        <description>find all non-verbal events such as laughing</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    <query id="6">
        <string>[#0]</string>
        <description>find the first token in each transcript</description>
        <corpus></corpus>
    </query>
    <query id="7">
        <string>[word="wann"]</string>
        <description>find transcribed token 'wann'</description>
        <corpus></corpus>
    </query>
    <query id="8">
        <string>[word_lc="wann"]</string>
        <description>find transcribed token 'wann' in a case-insensitive way ('wann' or 'Wann')</description>
        <corpus></corpus>
    </query>
    <query id="9">
        <string>[norm="zurück"]</string>
        <description>find all tokens with the normalized form 'zurück'</description>
        <corpus>FOLK|GWSS|DNAM|DH</corpus>
    </query>
    <query id="10">
        <string>[norm_lc="tag"]</string>
        <description>find all tokens with the normalized form 'tag' in a case-insensitive way ('tag' or 'Tag')</description>
        <corpus>FOLK|GWSS|MEND|DNAM</corpus>
    </query>
    <query id="28">
        <string>[lemma="tag"]</string>
        <description>find all tokens with the lemmatized form 'Tag'</description>
        <corpus>FOLK|GWSS|MEND|DNAM</corpus>
    </query>
    <query id="11">
        <string>[incident="Lachansatz"]</string>
        <description>find all non-verbal events annotated with 'Lachansatz'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="12">
        <string>[pos="VM(INF|PP|FIN)"]</string>
        <description>find all modal verbs (= annotated with pos tags 'VMINF', 'VMFIN' or 'VMPP')</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="13">
        <string>[pos="VM.*"]</string>
        <description>find all modal verbs in all possible forms including contracted forms such as transcribed 'kanscho' (kannst du schon) annotated with pos tag 'VMFIN PPER ADV'</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="14">
        <string>[pos=".+ .+( .+)*"]</string>
        <description>find all word tokens annotated with more than one pos tag</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="15">
        <string>[lemma="Student(in|en)?"]</string>
        <description>find all tokens with lemma 'Student', 'Studentin' or 'Studenten'</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="16">
        <string>[phon="ʔyː\\.bɐ"]</string>
        <description>find all words that are pronounced the same as word-initial or single word 'über'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="17">
        <string>[vocal="short breathe in"]</string>
        <description>find all vocalized phenomena annotated with 'short breathe in' (= °h)</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="18">
        <string>[word.type=".*ol-in.*"]</string>
        <description>find all words that overlap with contributions of other speakers (either partially or completely)</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="19">
        <string>[norm="wir" &amp; word.type=".*assimilated.*"]</string>
        <description>find all 'wir' annotated as 'assimilated' (= transcribed with underscore, as clitic)"</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="20">
        <string>[word="hier" &amp; !word.type=".*uncertain.*"]</string>
        <description>find 'hier', but not annotated as 'uncertain'</description>
        <corpus></corpus>
    </query>
    <query id="21">
        <string>[word="(der|die)" &amp; pos="PDS"]</string>
        <description>find transcribed 'der' or 'die' annotated with 'PDS'</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="22">
        <string>[word=".+sch" &amp; norm=".+[^s]ch"]</string>
        <description>find words which are pronounced and transcribed with 'sch' at the end, but which end orthographically with 'ch', like 'dich' and 'natürlich'</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="23">
        <string>[word="hallo" &amp; #0]</string>
        <description>find transcribed form 'hallo' if it occurs at the first position of a transcript</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="24">
        <string>[pause.dur="0\..*" | pause.type="(micro|short|medium|long)"]</string>
        <description>find measured or estimated pauses shorter than a second</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    <query id="25">
        <string>[pause.dur.ceil&gt;6]</string>
        <description>find pauses longer than 6 seconds</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    <query id="26">
        <string>[pause.dur="6.0" | pause.dur.ceil&gt;6]</string>
        <description>find pauses equal to or longer than 6 seconds</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    <query id="27">
        <string>([!pause.dur="6.0" &amp; pause.dur.ceil&lt;=6] | [pause.type="(micro|short|medium|long)"])</string>
        <description>find measured or estimated pauses shorter than 6 seconds</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    
    <!-- *******************  Token Sequences *********************** -->
    
    <query id="100">
        <string>[word="die"][word="untersuchung"]</string>
        <description>find the token sequence 'die untersuchung'</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="101">
        <string>[word="die"] followedby [word="untersuchung"]</string>
        <description>find 'die' followed by 'untersuchung'</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="102">
        <string>[word="untersuchung"] precededby [word="die"]</string>
        <description>find 'untersuchung' preceded by 'die'</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="103">
        <string>[word="untersuchung"] !precededby [word="die"]</string>
        <description>find 'untersuchung' not preceded by 'die'</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="104">
        <string>[word="der"][pos="ADJA"][word="tag"]</string>
        <description>find 'der' followed by 'tag' with an attributive adjective in between</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="105">
        <string>[word="zu"][pause.type="micro"][pos="V.INF"]</string>
        <description>find 'zu' followed by one micro pause and an infinite verb of any type (full verb, auxiliary, modal verb)</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="106">
        <string>([norm="ich"][norm="habe"]|[norm="habe"][norm="ich"])[word="mich"]</string>
        <description>find all forms of 'ich habe' or 'habe ich' followed by "mich"</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="107">
        <string>[word="vielen"][lemma="äh"]?[word="dank"]</string>
        <description>find transcribed 'vielen' followed by 'dank' with one optional form of lemma 'äh' in between</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="108">
        <string>[word="(herr|frau)"]([word="äh"]|&lt;pause/&gt;|&lt;vocal/&gt;|&lt;incident/&gt;)?[pos="NE"]</string>
        <description>find 'herr' or 'frau' followed by a proper name, with one filler transcribed as 'äh', a pause of any length and/or another non-lexical or non-vocal phenomenon optionally occurring in between</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="109">
        <string>[pos="ART"][!lemma="äh"][pos="NN"]</string>
        <description>find an article followed by a noun with one token of any kind in between, but not any form of lemma 'äh' </description>
        <corpus>FOLK|GWSS|MT|DNAM</corpus>
    </query>
    <query id="110">
        <string>[word="die"][][word="woche"]</string>
        <description>find 'die' followed by 'woche' with one token (e.g. word token, pause or non-speech event) in between</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="111">
        <string>[word="ich"][]{2,3}[word="du"]</string>
        <description>find 'ich' followed by 'du' with two or three tokens (e.g. word tokens, pauses or non-speech events) in between</description>
        <corpus>FOLK|GWSS|MEND|DNAM</corpus>
    </query>
    <query id="112">
        <string>[word.type=".*assimilated.*"]{2}</string>
        <description>find a repetition of two words annotated as 'assimilated' (= transcribed with underscore, as clitic)</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="113">
        <string>[pos="ART"][pos="ADJA"]{2}[pos="NN"]</string>
        <description>find an article followed by a noun with two attributive adjectives in between</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="114">
        <string>[pos="ART"]&lt;word/&gt;{2}[pos="NN"]</string>
        <description>find an article followed by a noun with two word tokens in between (pauses and other non-speech events are not allowed)</description>
        <corpus>FOLK|GWSS|MT|DNAM</corpus>
    </query>
    <query id="115">
        <string>[pos="ART"]((&lt;pause/&gt;|&lt;vocal/&gt;|&lt;incident/&gt;)?&lt;word/&gt;(&lt;pause/&gt;|&lt;vocal/&gt;|&lt;incident/&gt;)?){2}[pos="NN"]</string>
        <description>find an article followed by a noun with two word tokens in between (pauses and/or other non-speech events may also occur in between)</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="116">
        <string>[word="die"][pos="ADJA"]{0,2}[word="woche"]</string>
        <description>find 'die' followed by 'woche' with either no further element or one or two adjectives in between</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    

    <!-- ******************** Structural Annotations ********************** -->
    
    <query id="242">
        <string>&lt;seg&gt;([pos="ART"][pos="NN"]){2} [word="und"]</string>
        <description>find segments starting with the construction 'ART'+'NN'+'ART'+'NN' followed by 'und'</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="243">
        <string>[lemma="und"] &lt;/annotationBlock&gt;</string>
        <description>find all forms of 'und' at the end of contributions</description>
        <corpus>FOLK|GWSS</corpus>
    </query>
    <query id="244">
        <string>([]{3}) fullyalignedwith &lt;seg/&gt;</string>
        <description>find segments with the length of three tokens</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    <query id="245">
        <string>([]{1,3}) fullyalignedwith &lt;annotationBlock/&gt;</string>
        <description>find speaker contributions with the maximum length of three tokens</description>
        <corpus></corpus>
    </query>
    <query id="246">
        <string>&lt;seg&gt;[word="so"]{2}&lt;/seg&gt;</string>
        <description>find 'so' at the beginning of a segment followed by 'so' at the end of the same or the following segment</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="247">
        <string>[word="so"]{2} fullyalignedwith &lt;seg/&gt;</string> <!-- finds also 
                            <seg type="contribution" xml:id="seg_d501e6759">
                                <anchor synch="TLI_723"/>
                                <w xml:id="w1189" norm="so" lemma="so" pos="NGIRR" phon="zO">so</w>
                                <w xml:id="w1190" norm="so" lemma="so" pos="NGIRR" phon="zO">s<anchor synch="TLI_724"/>o</w>
                                <anchor synch="TLI_725"/>
                            </seg>-->
        <description>find all segments transcribed as "so so"</description>
        <corpus>FOLK</corpus>
    </query>
    <!--<query id="248">
        <string>&lt;seg&gt;([word="so"]{2} within &lt;seg/&gt;)&lt;/seg&gt;</string>
        <description></description>
        <corpus></corpus>
    </query>-->
    <query id="249">
        <string>[word="einführung"] within &lt;DK/&gt;</string>
        <description>find 'einführung' within a span annotated at the 'DK' layer ('DK' stands for 'Diskurskommentare', eng. 'discourse comments')</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="250">
        <string>[norm="jetzt"] within [#0-2]</string>
        <description>find all forms of 'jetzt' within the first three tokens of a transcript</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="251">
        <string>&lt;pause/&gt; !within &lt;seg/&gt;</string>
        <description>find all pauses outside of &lt;seg&gt; elements</description>
        <corpus>FOLK|GWSS|MEND|DNAM</corpus>
    </query>
    <query id="252">
        <string>&lt;DK/&gt; containing [word="einführung"]</string>
        <description>find all spans annotated at the 'DK' layer and containing 'einführung'</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="254">
        <string>&lt;annotationBlock.speaker="SF"/&gt; !containing [lemma="äh"]</string>
        <description>find all contributions of speaker 'SF' not containing any forms of 'äh'</description>
        <corpus>FOLK</corpus>
    </query>
    
    <!-- *******************  Stand-off Annotations *********************** -->
    
    <query id="354">
        <string>&lt;speech-rate ="(6..*|7..*|8.0)"/&gt;</string>
        <description>find all passages with a speech-rate between 6 and 8 seconds</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="355">
        <string>&lt;DK="D2_Anfang"/&gt;</string>
        <description>find spans annotated with 'D2_Anfang' at the 'DK' layer</description>
        <corpus>GWSS</corpus> 
    </query>
    <query id="356">
        <string>&lt;VZ="Z_.*"/&gt;</string>
        <description>find spans annotated at the 'VZ' layer with a tag starting with "Z_" </description>
        <corpus>GWSS</corpus>
    </query>
    <query id="357">
        <string>&lt;t=".*Frage(n)?.*"/&gt;</string>
        <description>find all German translations of Code-Switching passages containing 'Frage' or 'Fragen'</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="358">
        <string>&lt;a="Wechsel"/&gt;</string>
        <description>find all spans annotated with 'Wechsel' at the 'a' layer (Code-Switching passages)</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="359">
        <string>&lt;seg.speaker="MOD"/&gt;</string>
        <description>find all segments of speaker 'MOD'</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="360">
        <string>&lt;prompt-reference="translation"/&gt;</string>
        <description>find all spans annotated with 'translation' at the 'prompt-reference' layer </description>
        <corpus>MEND</corpus>
    </query>
    <query id="361">
        <string>&lt;prompt-reference.target="kaufmann-sentences.xml\\#44"/&gt;</string>
        <description>find all prompts and translations of kaufmann sentence number 44</description>
        <corpus>MEND</corpus>
    </query>
    <query id="362">
        <string>&lt;prompt-reference="translation"/&gt; fullyalignedwith &lt;prompt-reference.target="kaufmann.*44"/&gt;</string>
        <description>find all translations of kaufmann sentence number 44</description>
        <corpus>MEND</corpus>
    </query>
    <query id="363">
        <string>&lt;DK="D2_Diskussion"/&gt; &lt;DK="D1_Makrostruktur"/&gt;</string>
        <description>find all spans annotated with 'D2_Diskussion' that are followed by a span annotated with 'D1_Makrostruktur'</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="364">
        <string>&lt;DK="D2_Diskussion"/&gt; [word="zunächst"]</string>
        <description>find all spans annotated with 'D2_Diskussion' and followed by 'zunächst'</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="365">
        <string>&lt;DK&gt; [word="vielen"] [word="dank"]</string>
        <description>find all spans annotated at the 'DK' layer and starting with 'vielen dank'</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="366">
        <string>[pos=".V.*"]&lt;/VZ="Z_.*"&gt;</string>
        <description>find all forms and kinds of verbs at the end of a span which is annotated at the 'VZ' layer with a tag starting with 'Z_' ('VZ' stands for 'Verweise und Zitate', eng. 'references and citations')</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="367">
        <string>&lt;af/&gt;</string>
        <description>find all spans annotated at the 'action format (af)' layer (certain modal verb constructions and greetings)</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="368">
        <string>&lt;af ="Kann ich X\\?"/&gt;</string>
        <description>find all spans annotated at the 'action format (af)' layer with a tag containing the format 'Kann ich X?'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="369">
        <string>&lt;ar =".*Zustimmung.*"/&gt;</string>
        <description>find all spans annotated at the 'action reaction (ar)' layer with a tag containing 'Zustimmung'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="370">
        <string>&lt;DK="D1_Sprechhandlung-A"/&gt; fullyalignedwith &lt;VZ="Z_woertl_Kette"/&gt;</string>
        <description>find all spans annotated with 'D1_Sprechhandlung-A' at the 'DK' layer and with 'Z_woertl_Kette' at the 'VZ' layer</description>
        <corpus>GWSS</corpus>
    </query>
    <query id="371">
        <string>&lt;disfluency = "TROUBLE"/&gt;[]{0,5}&lt;disfluency = "REPAIR"/&gt;</string>
        <description>find all spans annotated with 'TROUBLE' and followed by a span annotated with 'REPAIR' at the distance of maximum 5 tokens</description>
        <corpus>MT</corpus>
    </query>
    <query id="372">
        <string>(&lt;disfluency = "TROUBLE"/&gt; !fullyalignedwith  &lt;word/&gt;) []{0,5} (&lt;disfluency = "REPAIR"/&gt; fullyalignedwith  &lt;word/&gt;)</string>
        <description>find all spans annotated with 'TROUBLE'. They should consist of more than one word token and be followed at the distance of maximum 5 tokens by a span annotated with 'REPAIR' and consisting of one word token</description>
        <corpus>MT</corpus>
    </query>
    <query id="373">
        <string>&lt;pho="bi\\[s\\]: "/&gt;</string>
        <description>find all spans annotated with 'bi\[s\]:' at the 'pho' layer</description>
        <corpus>MT</corpus>
    </query>  
    <query id="374">
        <string>&lt;as/&gt;</string>
        <description>find all spans annotated at the 'action sequence (as)' layer (certain sequences containing openings, proposals, offers etc.)</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="375">
        <string>&lt;as="Frage/Bitte/Aufforderung"/&gt;</string>
        <description>find all spans annotated with 'Frage/Bitte/Aufforderung' at the 'action sequence (as)' layer</description>
        <corpus>FOLK</corpus>
    </query>
    
    <!-- *********************************** Overlaps ***************************** -->

    <query id="376">
        <string>&lt;ar =".*Zustimmung.*"/&gt; containing [lemma="ja"]</string>
        <description>find spans which are annotated at the 'action reaction (ar)' annotation layer with a tag containing 'Zustimmung' and which contain any forms of 'ja'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="377">
        <string>&lt;ar =".*Zustimmung.*"/&gt; intersecting [lemma="ja"]</string>
        <description>find spans which are annotated at the 'action reaction (ar)' annotation layer with a tag containing 'Zustimmung' and which contain any forms of 'ja' or overlap with any forms of 'ja' (realized by other speakers)</description>
        <corpus>FOLK</corpus>
    </query> 
    <query id="380">
        <string>[lemma="ja"] intersecting &lt;ar =".*Zustimmung.*"/&gt;</string>
        <description>find all occurences of lemma 'ja' intersecting with any annotation tags containing 'Zustimmung' at the 'action reaction (ar)' annotation layer</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="381">
        <string>(&lt;annotationBlock/&gt; containing [lemma="ja"]) intersecting &lt;ar =".*Zustimmung.*"/&gt;</string>
        <description>find all contributions that contain lemma 'ja' and overlap with any annotation tags containing 'Zustimmung' at the 'action reaction (ar)' annotation layer</description>
        <corpus>FOLK</corpus>
    </query>    
    <query id="382">
        <string>(&lt;annotationBlock.speaker="PS"/&gt;) intersecting (&lt;annotationBlock.speaker="HA"/&gt;)</string>
        <description>find all overlaps of the speakers 'PS' and 'HA'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="383">
        <string>(&lt;annotationBlock.speaker="PS"/&gt;) intersecting ([word="hm"] within &lt;annotationBlock.speaker="HA"/&gt;)</string>
        <description>find all contributions of speaker 'PS' overlapping with transcribed 'hm' realized by speaker 'HA'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="384">
        <string>(&lt;annotationBlock/&gt; intersecting &lt;annotationBlock.speaker="HA"/&gt;) !containing &lt;annotationBlock.speaker="HA"/&gt;</string>
        <description>find all contributions overlapping with segments of speaker 'HA'</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="385">
        <string>&lt;annotationBlock/&gt; containing [word.type=".*ol-in.*"]</string>
        <description>find all contributions containing speaker overlaps</description>
        <corpus>FOLK</corpus>
    </query>
    <query id="386">
        <string>[lemma="bitte" &amp; word.type=".*ol-in.*"]</string>
        <description>find all forms of 'bitte' that overlap with contributions of other speakers (either partially or completely)</description>
        <corpus>FOLK</corpus>
    </query>


    

    <!--<query id="">
        <string>[pause.rend="\(\.\)"]</string>
        <description></description>
    </query>-->
    
    <query id="488">
        <string>&lt;speaker-overlap/&gt;</string>
        <description>find all speaker overlaps</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>
    <query id="489">
        <string>&lt;speaker-overlap/&gt; containing [lemma="(Herr|Frau)"]</string>
        <description>find all speaker overlaps containing any forms of 'Herr' or 'Frau'</description>
        <corpus>FOLK|GWSS|DNAM</corpus>
    </query>
    <query id="490">
        <string>&lt;annotationBlock/&gt; fullyalignedwith (([ ]{1,15} !intersecting &lt;speaker-overlap/&gt;) &lt;speaker-overlap/&gt;)</string>
        <description>contributions ending in speaker overlaps</description>
        <corpus>FOLK|GWSS|DNAM|MEND</corpus>
    </query>


    <!-- *********************************** Repetitions ***************************** -->


    <query id="591">
        <string>&lt;repetition="lemma"/&gt;</string>
        <description>find all lemma repetitions</description>
        <corpus></corpus>
    </query>

    <query id="592">
        <string>&lt;repetition="word"/&gt;</string>
        <description>find all word token repetitions</description>
        <corpus></corpus>
    </query>
    <query id="593">
        <string>&lt;repetition="lemma"/&gt; containing [pos="NN"]</string>
        <description>find all nouns within lemma repetitions</description>
        <corpus></corpus>
    </query>
    
    

        <!-- *********************************** Metadata ***************************** -->
        
    <query id="600">
        <string>[lemma="stopp"] within &lt;ses_rolle_s="Lehrer/in"/&gt;</string>
        <description>find all forms of 'stopp' realized by teachers</description>
        <corpus>FOLK</corpus>
    </query>    
    <query id="601">
        <string>(&lt;word/&gt;&lt;word/&gt;&lt;word/&gt;) within &lt;e_se_lebensbereich="Bildung"/&gt;</string>
        <description>display all trigrams in the education domain</description>
        <corpus>FOLK</corpus>
    </query>
    
    <!-- *********************************** UNSD ***************************** -->
    <query id="602">
        <string>[lemma="alle" &amp; pos="PL"]</string>
        <description>find lemma 'alle', annotated as plural word</description>
        <corpus>UNSD</corpus>
    </query>
    <query id="603">
        <string>[lemma="laufen"][pos="VV" &amp; !lemma="laufen"]</string>
        <description>find serial verb constructions containing the lemma 'laufen'</description>
        <corpus>UNSD</corpus>
    </query>
    <query id="604">
        <string>[word=".+ch" &amp; norm=".+g"]</string>
        <description>find instances of g-spirantization in word-final position</description>
        <corpus>UNSD</corpus>
    </query>
    <query id="605">
        <string>[word="f.+" &amp; norm="pf.+"]</string>
        <description>find instances of pf-deaffrication in word-initial position</description>
        <corpus>UNSD</corpus>
    </query>
    <query id="606">
        <string>[pos="FM-TP" &amp; word=".+im"]</string>
        <description>find Tok Pisin loan words marked for transitivity</description>
        <corpus>UNSD</corpus>
    </query>
    <query id="607">
        <string>[pos="VV"][pos="(PWS|PWAV)"]&lt;/seg&gt;</string>
        <description>find segments that end in a wh-question word preceded by a verb</description>
        <corpus>UNSD</corpus>
    </query>

</queries>
